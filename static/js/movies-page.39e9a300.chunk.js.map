{"version":3,"sources":["lib/getImgOrDefault.js","components/moviesList/MoviesListStyled.js","components/moviesList/MoviesList.js","pages/moviesPage/MoviesPageStyled.js","lib/parseQueryString.js","pages/moviesPage/MoviesPage.js"],"names":["getImgOrDefault","imgSrc","MoviesListContainer","styled","ul","withRouter","movies","location","map","id","poster_path","title","to","pathname","state","from","src","alt","SearchbarHeader","header","SearchForm","form","parseQueryString","query","queryStr","URLSearchParams","Object","fromEntries","entries","MoviesPage","searchTerm","handleSearch","a","props","search","axios","get","response","setState","data","results","console","log","handleChange","evt","target","value","handleSubmit","preventDefault","history","push","this","prevProps","prevState","onSubmit","type","className","autoComplete","autoFocus","placeholder","onChange","MoviesList","Component"],"mappings":"mGAKeA,IALS,SAAAC,GAAM,OAC5BA,EAAM,wCAC+BA,GACjC,6B,gFCDOC,E,MAAsBC,EAAOC,GAAV,6R,gCCFhC,yCAkBeC,iBAdI,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SAC3B,OACE,cAAC,IAAD,UACGD,EAAOE,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,YAAaC,EAAnB,EAAmBA,MAAnB,OACV,6BACE,cAAC,IAAD,CAAMC,GAAI,CAACC,SAAS,WAAD,OAAaJ,GAAMK,MAAO,CAACC,KAAMR,IAApD,SACE,qBAAKS,IAAKhB,YAAgBU,GAAcO,IAAKN,OAFxCF,Y,gJCNJS,EAAkBf,IAAOgB,OAAV,iiBAmBfC,EAAajB,IAAOkB,KAAV,opCChBRC,EALU,WAAiB,IAAhBC,EAAe,uDAAP,GAC1BC,EAAW,IAAIC,gBAAgBF,GACrC,OAAOG,OAAOC,YAAYH,EAASI,Y,eCI/BC,E,4MACJf,MAAQ,CAACgB,WAAY,GAAIxB,OAAQ,I,EAkBjCyB,a,sBAAe,gCAAAC,EAAA,6DACNzB,EAAY,EAAK0B,MAAjB1B,SACDgB,EAAQD,EAAiBf,EAAS2B,QAAQX,MAFnC,SAGUY,IAAMC,IAAN,mGACuEb,EADvE,+CAHV,OAGPc,EAHO,OAOb,EAAKC,SAAS,CAAChC,OAAQ+B,EAASE,KAAKC,UACrCC,QAAQC,IAAI,EAAK5B,OARJ,2C,EAWf6B,aAAe,SAAAC,GACb,EAAKN,SAAS,CAACR,WAAYc,EAAIC,OAAOC,S,EAGxCC,aAAe,SAAAH,GACbA,EAAII,iBACc,EAAKf,MAAhBgB,QACCC,KAAR,wBAA8B,EAAKpC,MAAMgB,c,uDAlC3C,WACuBR,EAAiB6B,KAAKlB,MAAM1B,SAAS2B,QAAQX,OAEhE4B,KAAKpB,iB,gCAIT,SAAmBqB,EAAWC,GACd/B,EAAiB8B,EAAU7C,SAAS2B,QAAQX,QACrCD,EAAiB6B,KAAKlB,MAAM1B,SAAS2B,QAAQX,OAGhE4B,KAAKpB,iB,oBAyBT,WACE,OACE,qCACE,cAACb,EAAD,UACE,eAACE,EAAD,CAAYkC,SAAUH,KAAKJ,aAA3B,UACE,wBAAQQ,KAAK,SAASC,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAEF,uBACEA,UAAU,mBACVD,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAAUT,KAAKR,aACfG,MAAOK,KAAKrC,MAAMgB,kBAIxB,cAAC+B,EAAA,EAAD,CAAYvD,OAAQ6C,KAAKrC,MAAMR,gB,GA3DdwD,aAiEVjC","file":"static/js/movies-page.39e9a300.chunk.js","sourcesContent":["const getImgOrDefault = imgSrc =>\n  imgSrc\n    ? `http://image.tmdb.org/t/p/w300${imgSrc}`\n    : '../../images/default.png';\n\nexport default getImgOrDefault;\n","import styled from 'styled-components';\n\nexport const MoviesListContainer = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import {Link, withRouter} from 'react-router-dom';\nimport getImgOrDefault from '../../lib/getImgOrDefault';\nimport {MoviesListContainer} from './MoviesListStyled';\n\nconst MoviesList = ({movies, location}) => {\n  return (\n    <MoviesListContainer>\n      {movies.map(({id, poster_path, title}) => (\n        <li key={id}>\n          <Link to={{pathname: `/movies/${id}`, state: {from: location}}}>\n            <img src={getImgOrDefault(poster_path)} alt={title}></img>\n          </Link>\n        </li>\n      ))}\n    </MoviesListContainer>\n  );\n};\n\nexport default withRouter(MoviesList);\n","import styled from 'styled-components';\n\nexport const SearchbarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background: rgba(139, 187, 229, 0.3);\n  background-image: linear-gradient(to top, rgba(139, 187, 229, 0.5), #166494);\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n\n  .SearchForm-button {\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n  }\n\n  .SearchForm-button:hover {\n    opacity: 1;\n  }\n\n  .SearchForm-button-label {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n  }\n\n  .SearchForm-input {\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n  }\n\n  .SearchForm-input::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","const parseQueryString = (query = {}) => {\n  const queryStr = new URLSearchParams(query);\n  return Object.fromEntries(queryStr.entries());\n};\n\nexport default parseQueryString;\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {SearchbarHeader, SearchForm} from './MoviesPageStyled';\nimport parseQueryString from '../../lib/parseQueryString';\nimport MoviesList from '../../components/moviesList/MoviesList';\n\nclass MoviesPage extends Component {\n  state = {searchTerm: '', movies: []};\n\n  componentDidMount() {\n    const currentQuery = parseQueryString(this.props.location.search).query;\n    if (currentQuery) {\n      this.handleSearch();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const query = parseQueryString(prevProps.location.search).query;\n    const currentQuery = parseQueryString(this.props.location.search).query;\n\n    if (query !== currentQuery) {\n      this.handleSearch();\n    }\n  }\n\n  handleSearch = async () => {\n    const {location} = this.props;\n    const query = parseQueryString(location.search).query;\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=ea85f2b4fc5ff28c9522c59f4ba43c3d&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n\n    this.setState({movies: response.data.results});\n    console.log(this.state);\n  };\n\n  handleChange = evt => {\n    this.setState({searchTerm: evt.target.value});\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    const {history} = this.props;\n    history.push(`/movies?query=${this.state.searchTerm}`);\n  };\n\n  render() {\n    return (\n      <>\n        <SearchbarHeader>\n          <SearchForm onSubmit={this.handleSubmit}>\n            <button type=\"submit\" className=\"SearchForm-button\">\n              <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n            <input\n              className=\"SearchForm-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search movies\"\n              onChange={this.handleChange}\n              value={this.state.searchTerm}\n            />\n          </SearchForm>\n        </SearchbarHeader>\n        <MoviesList movies={this.state.movies} />\n      </>\n    );\n  }\n}\n\nexport default MoviesPage;\n"],"sourceRoot":""}